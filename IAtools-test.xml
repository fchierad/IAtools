<?xml version="1.0" encoding="UTF-8"?><driver-configuration config-type="app-config" dn="CN=rbpm,CN=driverset1,o=system" driver-set-dn="CN=driverset1,o=system" name="rbpm">
    <children>
        <provisioning>
            <ds-object ds-object-class="srvprvAppConfig" ds-object-name="AppConfig">
                <ds-attribute ds-attr-name="Version">
                    <ds-value>4.5</ds-value>
                </ds-attribute>
                <ds-object ds-object-class="nrfAuthTypes" ds-object-name="AuthTypes">
                    <ds-attributes/>
                </ds-object>
                <ds-object ds-object-class="nrfUIConfig" ds-object-name="UIConfig">
                    <ds-attributes/>
                    <ds-object ds-object-class="nrfNavItems" ds-object-name="NavItems">
                        <ds-attributes/>
                    </ds-object>
                </ds-object>
                <ds-object ds-object-class="srvprvAppDefs" ds-object-name="AppDefs">
                    <ds-attributes/>
                </ds-object>
                <ds-object ds-object-class="srvprvDirectoryModel" ds-object-name="DirectoryModel">
                    <ds-attributes/>
                    <ds-object ds-object-class="srvprvChoiceDefs" ds-object-name="ChoiceDefs">
                        <ds-attributes/>
                    </ds-object>
                    <ds-object ds-object-class="srvprvEntityDefs" ds-object-name="EntityDefs">
                        <ds-attributes/>
                    </ds-object>
                    <ds-object ds-object-class="srvprvQueryDefs" ds-object-name="QueryDefs">
                        <ds-attributes/>
                    </ds-object>
                    <ds-object ds-object-class="srvprvRelationshipDefs" ds-object-name="RelationshipDefs">
                        <ds-attributes/>
                    </ds-object>
                </ds-object>
                <ds-object ds-object-class="srvprvRequestDefs" ds-object-name="RequestDefs">
                    <ds-attributes/>
                    <ds-object ds-object-class="srvprvRequest" ds-object-name="IAtools-test">
                        <ds-attributes>
                            <ds-attribute ds-attr-name="Description">
                                <ds-value>IAtools-test</ds-value>
                            </ds-attribute>
                            <ds-attribute ds-attr-name="srvprvStatus">
                                <ds-value>Active</ds-value>
                            </ds-attribute>
                            <ds-attribute ds-attr-name="srvprvFlowStrategy">
                                <ds-value>SingleFlow</ds-value>
                            </ds-attribute>
                            <ds-attribute ds-attr-name="srvprvGrant">
                                <ds-value>true</ds-value>
                            </ds-attribute>
                            <ds-attribute ds-attr-name="srvprvRevoke">
                                <ds-value>false</ds-value>
                            </ds-attribute>
                            <ds-attribute ds-attr-name="srvprvCategoryKey">
                                <ds-value>accounts</ds-value>
                            </ds-attribute>
                            <ds-attribute ds-attr-name="srvprvLocalizedNames">
                                <ds-value>en~IAtools-test</ds-value>
                            </ds-attribute>
                            <ds-attribute ds-attr-name="srvprvLocalizedDescrs">
                                <ds-value>en~IAtools-test</ds-value>
                            </ds-attribute>
                            <ds-attribute ds-attr-name="XMLData">
                                <ds-value><![CDATA[PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHByb3YtcmVxLWRlZm4gZmxvdy1zdHJhdGVneT0iU2luZ2xlRmxvdyIgZ3JhbnQ9InRydWUiCiAgICBwcm92LWNhdGVnb3J5PSJhY2NvdW50cyIgcHJvdi1pZD0iSUF0b29scy10ZXN0IiByZXZva2U9ImZhbHNlIgogICAgICAgIHN0YXR1cz0iQWN0aXZlIj48cHJvdi1yZXNvdXJjZS1yZWY+Tm9uZTwvcHJvdi1yZXNvdXJjZS1yZWY+PHdvcmtmbG93LXJlZi8+PGRpc3BsYXktbmFtZQogICAgICAgIHhtbDpsYW5nPSJlbiI+SUF0b29scy10ZXN0PC9kaXNwbGF5LW5hbWU+PGRlc2NyaXB0aW9uCiAgICAgICAgICAgIHhtbDpsYW5nPSJlbiI+SUF0b29scy10ZXN0PC9kZXNjcmlwdGlvbj48dHJ1c3RlZXMvPjx4bWwtZGF0YT48ZGVzaWduLXBhcmFtcwogICAgICAgICAgICBkaWdpdGFsLXNpZ25hdHVyZS10eXBlPSJub3QtcmVxdWlyZWQiIGdyYW50PSJ0cnVlIgogICAgICAgICAgICBub3RpZnktYWRkcmVzc2VlPSJmYWxzZSIKICAgICAgICAgICAgICAgICAgICBwcm92LWlkPSJJQXRvb2xzLXRlc3QiPjxmb3JtLXRpdGxlPjxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9ImVuIj5JQXRvb2xzLXRlc3Q8L2Rpc3BsYXktbGFiZWw+PGRlc2NyaXB0aW9uCiAgICAgICAgICAgICAgICB4bWw6bGFuZz0iZW4iPklBdG9vbHMtdGVzdDwvZGVzY3JpcHRpb24+PC9mb3JtLXRpdGxlPjxwcm92LXJlc291cmNlCiAgICAgICAgICAgICAgICAgICAgbmFtZT0iTm9uZSIvPjx3b3JrZmxvdy8+PGxlZ2FsLWRpc2NsYWltZXJzLz48bGlua3M+PGxpbmsKICAgICAgICAgICAgICAgICAgICBzb3VyY2U9IlN0YXJ0IiB0YXJnZXQ9IkFjdGl2aXR5IgogICAgICAgICAgICAgICAgICAgIHR5cGU9ImZvcndhcmQiLz48bGluayBzb3VyY2U9IkFjdGl2aXR5IgogICAgICAgICAgICAgICAgICAgIHRhcmdldD0iRmluaXNoIgogICAgICAgIHR5cGU9ImZvcndhcmQiLz48L2xpbmtzPjwvZGVzaWduLXBhcmFtcz48cmVzb3VyY2UtZGF0YS1iaW5kaW5nLz48L3htbC1kYXRhPjxwcm9jZXNzCiAgICAgICAgZGVmYXVsdC1jb21wbGV0ZWQtYXBwcm92YWwtc3RhdHVzPSJhcHByb3ZlZCIKICAgICAgICBpZD0iY249SUF0b29scy10ZXN0LGNuPVJlcXVlc3REZWZzLGNuPUFwcENvbmZpZyxDTj1yYnBtLENOPWRyaXZlcnNldDEsbz1zeXN0ZW0iCiAgICAgICAgc2V0bm90aWZ5PSJmYWxzZSIgdmVyc2lvbj0iNC41LjAiCiAgICAgICAgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIKICAgICAgICAgICAgeHNpOm5vTmFtZXNwYWNlU2NoZW1hTG9jYXRpb249IkFwcHJvdmFsUHJvY2VzczRfNV8wLnhzZCI+PGRpc3BsYXktbmFtZQogICAgICAgICAgICB4bWw6bGFuZz0iZW4iPklBdG9vbHMtdGVzdDwvZGlzcGxheS1uYW1lPjxzdGFydC1hY3Rpdml0eQogICAgICAgICAgICAgICAgYWN0aXZpdHktaWQ9IlN0YXJ0Ij48ZGlzcGxheS1uYW1lCiAgICAgICAgICAgICAgICB4bWw6bGFuZz0iZW4iPlN0YXJ0PC9kaXNwbGF5LW5hbWU+PGRpc3BsYXktbmFtZQogICAgICAgICAgICB4bWw6bGFuZz0iZW4iPlN0YXJ0PC9kaXNwbGF5LW5hbWU+PC9zdGFydC1hY3Rpdml0eT48bG9nLWFjdGl2aXR5CiAgICAgICAgICAgICAgICBhY3Rpdml0eS1pZD0iQWN0aXZpdHkiPjxkaXNwbGF5LW5hbWUKICAgICAgICAgICAgeG1sOmxhbmc9ImVuIj5Mb2c8L2Rpc3BsYXktbmFtZT48YXV0aG9yPidkZWJ1Zyc8L2F1dGhvcj48bWVzc2FnZT4iSlNPTiBzdHJpbmcgZnJvbSBmb3JtIHNlbGVjdGlvbnM6ICIgKyBmbG93ZGF0YS5nZXQoJ1N0YXJ0L3JlcWZvcm0vc2VsZWN0aW9ucycpOzwvbWVzc2FnZT48Y29tbWVudD5mbG93ZGF0YS5nZXQoJ1N0YXJ0L3JlcWZvcm0vc2VsZWN0aW9ucycpOzwvY29tbWVudD48L2xvZy1hY3Rpdml0eT48ZmluaXNoLWFjdGl2aXR5CiAgICAgICAgICAgICAgICBhY3Rpdml0eS1pZD0iRmluaXNoIj48ZGlzcGxheS1uYW1lCiAgICAgICAgICAgICAgICB4bWw6bGFuZz0iZW4iPkZpbmlzaDwvZGlzcGxheS1uYW1lPjxkaXNwbGF5LW5hbWUKICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJlbiI+RmluaXNoPC9kaXNwbGF5LW5hbWU+PG5vdGlmeQogICAgICAgICAgICB0ZW1wbGF0ZT0iY249UHJvdmlzaW9uaW5nIEFwcHJvdmFsIENvbXBsZXRlZCBOb3RpZmljYXRpb24sY249RGVmYXVsdCBOb3RpZmljYXRpb24gQ29sbGVjdGlvbixjbj1zZWN1cml0eSIvPjwvZmluaXNoLWFjdGl2aXR5PjxsaW5rCiAgICAgICAgICAgIHNvdXJjZT0iU3RhcnQiIHRhcmdldD0iQWN0aXZpdHkiIHR5cGU9ImZvcndhcmQiLz48bGluawogICAgICAgICAgICBzb3VyY2U9IkFjdGl2aXR5IiB0YXJnZXQ9IkZpbmlzaCIgdHlwZT0iZm9yd2FyZCIvPjwvcHJvY2Vzcz48L3Byb3YtcmVxLWRlZm4+Cg==]]></ds-value>
                            </ds-attribute>
                            <ds-attribute ds-attr-name="srvprvRequestXML">
                                <ds-value><![CDATA[PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHByb3Zpc2lvbi1yZXF1ZXN0IHZlcnNpb249IjQuNS4wIgogICAgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIKICAgICAgICB4c2k6bm9OYW1lc3BhY2VTY2hlbWFMb2NhdGlvbj0iQXBwcm92YWxSZXF1ZXN0NF81XzAueHNkIj4KICAgICAgICA8Zm9ybQogICAgICAgICAgICAgICAgZm9ybS1pZD0icmVxdWVzdF9mb3JtIj4KICAgICAgICAgICAgPGNvbnRlbnQ+CiAgICAgICAgICAgICAgICA8c2NyaXB0Pi8vIE1pbmlmaWVkIElBVG9vbHMgbGlicmFyeS4KCnZhciBJQXRvb2xzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt2YXIgdCxhLG4sbD17ZGF0YTpbXSxkaXNwbGF5OltdfTtpZihudWxsPT1lfHwiIj09ZXx8InN0cmluZyIhPXR5cGVvZiBlKXJldHVybiBjb25zb2xlLmxvZygicmVhZEFsbFBpY2tsaXN0T3B0aW9uczogaW52YWxpZCBwYXJhbWV0ZXIgcGFzc2VkLiBQbGVhc2UgcGFzcyBhIHN0cmluZyB3aXRoIHRoZSBmaWVsZCdzIG5hbWUgYXMgaXQgYXBwZWFycyBpbiBEZXNpZ25lciIpLGw7aWYobj0iXyIrZSxudWxsIT0odD1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChuKSkmYW1wOyZhbXA7dC5pZD09PW4/InNlbGVjdCI9PVN0cmluZyh0LnRhZ05hbWUpLnRvTG93ZXJDYXNlKCk/YT10LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJvcHRpb24iKTpjb25zb2xlLmxvZygicmVhZEFsbFBpY2tsaXN0T3B0aW9uczogRmllbGQgIitlKyIgaXMgbm90IGEgcGlja2xpc3QuIEVsZW1lbnQgZm91bmQgd2FzOiAiK3QudGFnTmFtZSk6Y29uc29sZS5sb2coInJlYWRBbGxQaWNrbGlzdE9wdGlvbnM6IGNvdWxkIG5vdCBmaW5kIGZpZWxkICIrZSsiIG9uIHRoaXMgY3VycmVudCBmb3JtLiIpLG51bGwhPWEmYW1wOyZhbXA7YS5sZW5ndGgmZ3Q7MClmb3IodmFyIHI9MDtyJmx0O2EubGVuZ3RoO3IrKyludWxsIT1hW3JdLmdldEF0dHJpYnV0ZSgidmFsdWUiKSZhbXA7JmFtcDthW3JdLmdldEF0dHJpYnV0ZSgidmFsdWUiKS5sZW5ndGgmZ3Q7MCZhbXA7JmFtcDtudWxsIT1hW3JdLnRleHRDb250ZW50JmFtcDsmYW1wO2Fbcl0udGV4dENvbnRlbnQubGVuZ3RoJmd0OzAmYW1wOyZhbXA7KGwuZGF0YS5wdXNoKGFbcl0uZ2V0QXR0cmlidXRlKCJ2YWx1ZSIpKSxsLmRpc3BsYXkucHVzaChhW3JdLnRleHRDb250ZW50KSk7cmV0dXJuIGx9dmFyIHQ9IklBdG9vbHMiLGE9e2luaXQ6ZnVuY3Rpb24oZSx0LGEpe251bGwhPWUmYW1wOyZhbXA7KG4uZmllbGQ9ZSksbnVsbCE9dCZhbXA7JmFtcDsobi5mb3JtPXQpLG51bGwhPWEmYW1wOyZhbXA7KG4uSURWYXVsdD1hKX0sdmVyc2lvbjpmdW5jdGlvbigpe3JldHVybiIwLjAuMyJ9LGZpZWxkVmlzaWJpbGl0eTpmdW5jdGlvbihlLHQpe3ZhciBhPVN0cmluZyhlLmdldEN1c3RvbURhdGEoKSk7c3dpdGNoKGEudG9Mb3dlckNhc2UoKSl7Y2FzZSJzaG93Ijp0LnNob3coKTticmVhaztjYXNlImhpZGUiOnQuaGlkZSgpO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5sb2coIkZpZWxkOiAiK3QuZ2V0TGFiZWwoKSsiLCBFdmVudDogIitlLmdldEV2ZW50TmFtZSgpKyIsIEludmFsaWQgb3B0aW9uIHJlY2VpdmVkOiAiK2EpfX0sdGFiQ3RybEZhY3Rvcnk6ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7aWYobnVsbD09ZXx8bnVsbD09dClyZXR1cm4hMTt2YXIgbixsLHI9dC5zcGxpdCgvXy8pWzBdLG89ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocik7aWYoIW8pcmV0dXJuITE7Zm9yKGw9by5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKGkubmF2aXRlbSksbj0wO24mbHQ7bC5sZW5ndGg7bisrKS0xIT09bFtuXS5jbGFzc05hbWUuaW5kZXhPZihpLm5hdmFjdGl2ZSkmYW1wOyZhbXA7KGxbbl0uY2xhc3NOYW1lPWxbbl0uY2xhc3NOYW1lLnJlcGxhY2UoaS5uYXZhY3RpdmUsIiIpLnJlcGxhY2UoL1xzKy9nLCIgIiksYShsW25dLmlkLCJoaWRlIikpO3JldHVybiBlLmN1cnJlbnRUYXJnZXQuY2xhc3NOYW1lPWUuY3VycmVudFRhcmdldC5jbGFzc05hbWUucmVwbGFjZSgvXHMrJC9nLCIiKSsiICIraS5uYXZhY3RpdmUsYShlLmN1cnJlbnRUYXJnZXQuaWQsInNob3ciKSwhMH1mdW5jdGlvbiBhKGUsdCl7aWYoIW4uaGFzT3duUHJvcGVydHkoImZpZWxkIikpcmV0dXJuITE7aWYobnVsbD09ZXx8InNob3ciIT09dCZhbXA7JmFtcDsiaGlkZSIhPT10KXJldHVybiExO3ZhciBhPWUuc3BsaXQoL18vKVsxXSxsPXtzaG93OiJlbnRlciIsaGlkZToibGVhdmUifTtyZXR1cm4gci5oYXNPd25Qcm9wZXJ0eShhKSZhbXA7JmFtcDtyW2FdLmhhc093blByb3BlcnR5KCJmaWVsZGxpc3QiKSZhbXA7JmFtcDtyW2FdLmZpZWxkbGlzdCBpbnN0YW5jZW9mIEFycmF5JmFtcDsmYW1wO3JbYV0uZmllbGRsaXN0LmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIGk7by5oYXNPd25Qcm9wZXJ0eShlKSZhbXA7JmFtcDsoaT1vW2VdLG4uZmllbGQuZmlyZUV2ZW50KGksdCkpLHJbYV0uaGFzT3duUHJvcGVydHkoImNhbGxiYWNrIikmYW1wOyZhbXA7clthXS5jYWxsYmFjayhhLGxbdF0pfSksITB9dmFyIGw9e2FkZFRhYjpmdW5jdGlvbihlLHQsYSxuLGwpe2lmKG51bGw9PWV8fCIiPT09ZXx8bnVsbD09dHx8bnVsbD09YXx8bnVsbD09bilyZXR1cm4hMTtpZighKG4gaW5zdGFuY2VvZiBBcnJheSkpe2lmKCJzdHJpbmciIT10eXBlb2YgbilyZXR1cm4hMTtuPVtuXX1yZXR1cm4gZT1lLnJlcGxhY2UoL18vZywiIiksIXJbZV0mYW1wOyZhbXA7KHJbZV09e25hbWU6U3RyaW5nKHQpLG9yZGVyOk51bWJlcihhKSxmaWVsZGxpc3Q6bn0sImZ1bmN0aW9uIj09dHlwZW9mIGwmYW1wOyZhbXA7KHJbZV0uY2FsbGJhY2s9bCksITApfSxyZW1vdmVUYWI6ZnVuY3Rpb24oZSl7cmV0dXJuIG51bGwhPWUmYW1wOyZhbXA7IiIhPT1lJmFtcDsmYW1wOyhlPWUucmVwbGFjZSgvXy9nLCIiKSwhIXJbZV0mYW1wOyZhbXA7ZGVsZXRlIHJbZV0pfSxzZXRDU1NDbGFzc05hbWU6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbnVsbCE9ZSZhbXA7JmFtcDtudWxsIT10JmFtcDsmYW1wOyEhaS5oYXNPd25Qcm9wZXJ0eShlKSZhbXA7JmFtcDsoaVtlXT10LCEwKX0sc2V0RmllbGRFdmVudE5hbWU6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbnVsbCE9ZSZhbXA7JmFtcDtudWxsIT10JmFtcDsmYW1wOyhvW1N0cmluZyhlKV09U3RyaW5nKHQpLCEwKX0sZ2V0U2FtcGxlQ1NTOmZ1bmN0aW9uKCl7cmV0dXJuIiZsdDtzdHlsZSZndDsuIitpLm5hdmJhcisie2xpc3Qtc3R5bGUtdHlwZTpub25lO21hcmdpbjowO3BhZGRpbmc6MDtvdmVyZmxvdzpoaWRkZW59LiIraS5uYXZiYXIrIiBsaXtmbG9hdDpsZWZ0fS4iK2kubmF2YmFyKyIgbGkgYSB7ZGlzcGxheTpibG9jaztwYWRkaW5nOjhweCAxNnB4fS4iK2kubmF2aXRlbSsie2NvbG9yOiMwMDAwMDA7YmFja2dyb3VuZC1jb2xvcjojRTNFMURDO2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MTZweDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czo2cHh9LiIraS5uYXZiYXIrIiBsaSBhOmhvdmVye2NvbG9yOiNFRDc0MjA7YmFja2dyb3VuZy1jb2xvcjojQjBBOUExfS4iK2kubmF2YWN0aXZlKyJ7Y29sb3I6IzAwQkNFNztiYWNrZ3JvdW5kLWNvbG9yOiM0ODRCNEQ7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czoxNnB4O2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjZweH1hLiIraS5uYXZhY3RpdmUrIntjb2xvcjojMDBCQ0U3O2JhY2tncm91bmQtY29sb3I6IzQ4NEI0RDtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjE2cHg7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6NnB4fSZsdDsvc3R5bGUmZ3Q7In0sZ2V0VGFiSFRNTDpmdW5jdGlvbihuKXtpZihudWxsPT1uKXJldHVybiExO3ZhciBsLG8scyxjPWZ1bmN0aW9uKGEpe3ZhciBuPVN0cmluZyhhKSsiYWN0aXZhdGVUYWIiO3JldHVybiB3aW5kb3dbdF18fCh3aW5kb3dbdF09e30pLHdpbmRvd1t0XS5keW5hbWljfHwod2luZG93W3RdLmR5bmFtaWM9e30pLHdpbmRvd1t0XS5keW5hbWljW25dPWUsdCsiLmR5bmFtaWMuIitufShuKTtyZXR1cm4gbD0nJmx0O3VsIGlkPSInK24rJyIgY2xhc3M9IicraS5uYXZiYXIrJyImZ3Q7JyxvPU9iamVjdC5rZXlzKHIpLnNvcnQoZnVuY3Rpb24oZSx0KXtyZXR1cm4gcltlXS5vcmRlci1yW3RdLm9yZGVyfSkscz0hMCxvLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHQsbz1uKyJfIitlLGQ9YysiKCBldmVudCwgJyIrbysiJyApIjtzPyh0PWkubmF2aXRlbSsiICIraS5uYXZhY3RpdmUsYShvLCJzaG93Iikscz0hMSk6KHQ9aS5uYXZpdGVtLGEobywiaGlkZSIpKSxsKz0nJmx0O2xpJmd0OyZsdDthIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgaWQ9IicrbysnIiBjbGFzcz0iJyt0KyciIG9uY2xpY2s9IicrZCsnIiZndDsnK3JbZV0ubmFtZSsiJmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7In0pLGwrPSImbHQ7L3VsJmd0OyJ9fSxyPXt9LGk9e25hdmJhcjoiY2MtbmF2YmFyIixuYXZpdGVtOiJjYy1uYXZpdGVtIixuYXZhY3RpdmU6ImNjLW5hdmFjdGl2ZSJ9LG89e307cmV0dXJuIGx9LHJlYWRBbGxQaWNrbGlzdE9wdGlvbnM6ZSxwaWNrbGlzdEZuRmFjdG9yeTpmdW5jdGlvbih0LGEsbCl7cmV0dXJuIGZ1bmN0aW9uKHIsaSxvKXt2YXIgcz17fSxjPXtkYXRhOltdLGRpc3BsYXk6W119LGQ9e2RhdGE6W10sZGlzcGxheTpbXX0sdT0hMSxmPVtdLHA9W10sdj1bXSxnPSIiLG09IiIseT0hMDtpZigobnVsbD09cnx8IiI9PXJ8fHIubGVuZ3RoJmx0OzEpJmFtcDsmYW1wOyh5PSExLGNvbnNvbGUubG9nKCJOZWVkIGEgc2VsZWN0aW9uIHRvIGFjdCB1cG9uIikpLG51bGwhPWkmYW1wOyZhbXA7IiIhPWl8fCh5PSExLGNvbnNvbGUubG9nKCJzcmNGaWVsZE5hbWUgbm90IHByb3ZpZGVkIikpLCJyZW1vdmUiPT09dHx8bnVsbCE9byZhbXA7JmFtcDsiIiE9b3x8KHk9ITEsY29uc29sZS5sb2coImRlc3RGaWVsZE5hbWUgbm90IHByb3ZpZGVkIikpLCF5KXJldHVybiExO2lmKHIgaW5zdGFuY2VvZiBBcnJheXx8KHI9W3JdKSxjPWUoaSksc1tpXT17ZGF0YTpjLmRhdGEuc2xpY2UoKSxkaXNwbGF5OmMuZGlzcGxheS5zbGljZSgpfSwicmVtb3ZlIiE9PXQmYW1wOyZhbXA7KGQ9ZShvKSxzW29dPXtkYXRhOmQuZGF0YS5zbGljZSgpLGRpc3BsYXk6ZC5kaXNwbGF5LnNsaWNlKCl9KSxyLmZvckVhY2goZnVuY3Rpb24oZSl7LTEhPT0oZz1zW2ldLmRhdGEuaW5kZXhPZihlKSkmYW1wOyZhbXA7KCJhZGQiIT09dCZhbXA7JmFtcDsoc1tpXS5kYXRhLnNwbGljZShnLDEpLHNbaV0uZGlzcGxheS5zcGxpY2UoZywxKSx1PSEwKSwicmVtb3ZlIiE9PXQmYW1wOyZhbXA7KC0xPT09KG09c1tvXS5kYXRhLmluZGV4T2YoZSkpPyhzW29dLmRhdGEucHVzaChjLmRhdGFbZ10pLHNbb10uZGlzcGxheS5wdXNoKGMuZGlzcGxheVtnXSksdT0hMCk6KHYucHVzaChkLmRhdGFbbV0pLHU9ITApKSl9KSx1JmFtcDsmYW1wOyhmPXNbaV0uZGF0YSxwPVtdLGE/KCJmdW5jdGlvbiI9PXR5cGVvZiBsP2Yuc29ydChsKTpmLnNvcnQoKSxmLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHQ9Yy5kYXRhLmluZGV4T2YoZSk7cC5wdXNoKGMuZGlzcGxheVt0XSl9KSxzW2ldLmRpc3BsYXk9cCk6cD1zW2ldLmRpc3BsYXksbi5mb3JtLnNldFZhbHVlcyhpLGYscCksInJlbW92ZSIhPT10JmFtcDsmYW1wOyhmPXNbb10uZGF0YS5zbGljZSgpLHA9W10sYT8oImZ1bmN0aW9uIj09dHlwZW9mIGw/Zi5zb3J0KGwpOmYuc29ydCgpLGYuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD1zW29dLmRhdGEuaW5kZXhPZihlKTtwLnB1c2goc1tvXS5kaXNwbGF5W3RdKX0pLHNbb10uZGF0YT1mLnNsaWNlKCksc1tvXS5kaXNwbGF5PXAuc2xpY2UoKSk6cD1zW29dLmRpc3BsYXkuc2xpY2UoKSxuLmZvcm0uc2V0VmFsdWVzKG8sZixwKSx2Lmxlbmd0aCZndDswKSkpdHJ5e24uZm9ybS5zZWxlY3Qobyx2KX1jYXRjaChlKXtjb25zb2xlLmxvZygiRmFpbGVkIHNlbGVjdCgpIGFjdGlvbiBhZ2FpbnN0IGZpZWxkICIrbysiLCB2YWx1ZShzKSAiK3Yuam9pbigiLCIpKSxjb25zb2xlLmxvZygiZXJyb3IgbWVzc2FnZTogIitlLm1lc3NhZ2UpfXJldHVybiEwfX19LG49e307cmV0dXJuIGF9KCk7PC9zY3JpcHQ+CiAgICAgICAgICAgICAgICA8c2NyaXB0Pi8vIE9ubG9hZCBhbmQgb3RoZXIgZm9ybSBzY3JpcHRzCgpmdW5jdGlvbiBmb3JtX29ubG9hZCggZmllbGQsIGZvcm0sIElEVmF1bHQgKSB7CgkKCS8vIEluaXRpYWxpemVzIElBdG9vbHMgd2l0aCB0aGUgMyBmcmFtZXdvcmsgb2JqZWN0cyBwcm92aWRlZCBieSBJRE1BUFBTCglJQXRvb2xzLmluaXQoIGZpZWxkLCBmb3JtLCBJRFZhdWx0ICk7CgkKCS8vIEFkZHMgc29tZSBpbml0aWFsIGRhdGEgdG8gb3VyIHBpY2tsaXN0cwoJcG9wdWxhdGVQaWNrbGlzdEZpZWxkcyggZm9ybSApOwoJCgkvLyBTZXR1cCB0YWJiZWQgY29udHJvbAoJZm9ybS5zZXRWYWx1ZXMoICJ0YWJjb250cm9sIiwgWyBnZXRUYWJIVE1MKCAidGFiY29udHJvbCIgKSBdICk7CgkKCS8vIFNldHVwIHBpY2tsaXN0IGZ1bmN0aW9ucwoJLy8gQWRkaW5nIHRoZSBjcmVhdGVkIGZ1bmN0aW9ucyB0byB0aGUgZnJhbWV3b3JrIG9iamVjdCBpdHNlbGYgc28gCgkvLyB0aGF0IHdlIGRvbid0IGFkZCB0aGVtIHRvIHRoZSBnbG9iYWwgc2NvcGUKCUlBdG9vbHMucGlja2xpc3QgPSB7CgkJbW92ZVRvOiBJQXRvb2xzLnBpY2tsaXN0Rm5GYWN0b3J5KCAibW92ZSIsIHRydWUgKSwKCQlyZW1vdmVGcm9tTW92ZWQ6IElBdG9vbHMucGlja2xpc3RGbkZhY3RvcnkoICJyZW1vdmUiLCB0cnVlICksCgkJYWRkVG86IElBdG9vbHMucGlja2xpc3RGbkZhY3RvcnkoICJhZGQiLCBmYWxzZSApLAoJCXJlbW92ZUZyb21BZGRlZDogSUF0b29scy5waWNrbGlzdEZuRmFjdG9yeSggInJlbW92ZSIsIGZhbHNlICkKCX07CgkKCS8vIEZvcm0gc3VibWl0IGludGVyY2VwdC4KCWZvcm0uaW50ZXJjZXB0QWN0aW9uKCAiU3VibWl0QWN0aW9uIiwgImFyb3VuZCIsIGZ1bmN0aW9uIGdldERhdGEoIGludm9jYXRpb24gKSB7CgkvLyBDb2xsZWN0IGN1c3RvbSBwaWNrbGlzdCBmaWVsZCB2YWx1ZXMgYXMgc2VsZWN0aW9ucyBpbiB0aGUgZmllbGQgc3RvcmVTZWxlY3Rpb25zCgkJdmFyIEpTT05vYmogPSB7CgkJCVNlbGVjdGVkRnJ1aXQ6SUF0b29scy5yZWFkQWxsUGlja2xpc3RPcHRpb25zKCAidDFtb3ZldG8iICksCgkJCVNlbGVjdGVkUGxhbnQ6SUF0b29scy5yZWFkQWxsUGlja2xpc3RPcHRpb25zKCAidDNhZGR0byIgKQoJCX07CgkJZm9ybS5zZXRWYWx1ZXMoICJzdG9yZVNlbGVjdGlvbnMiLCBKU09OLnN0cmluZ2lmeSggSlNPTm9iaiApICk7CgkJLy8gQ29udGludWUgd2l0aCB0aGUgc3VibWl0IGFjdGlvbgoJCWludm9jYXRpb24ucHJvY2VlZCgpOwoJfSk7Cn0KCi8vIEluaXRpYWxpemVzIHRoZSAyIHNvdXJjZSBwaWNrbGlzdCBmaWVsZHMgd2l0aCBkYXRhCmZ1bmN0aW9uIHBvcHVsYXRlUGlja2xpc3RGaWVsZHMoIGZvcm0gKSB7Cglmb3JtLnNldFZhbHVlcyggInQxbW92ZWZyb20iLAoJCVsgImRhdGExIiwgICJkYXRhMiIsICAiZGF0YTMiLCAgImRhdGE0IiwgICJkYXRhNSIgXSwgLy8gRGF0YQoJCVsgIlN0cmF3YmVycnkiLCAgIk9yYW5nZSIsICAiQmFuYW5hIiwgICJBdm9jYWRvIiwgICJHcmFwZXMiIF0gKTsgLy8gRGlzcGxheQoJZm9ybS5zZXRWYWx1ZXMoICJ0M2FkZGZyb20iLAoJCVsgImRhdGExIiwgICJkYXRhMiIsICAiZGF0YTMiLCAgImRhdGE0IiwgICJkYXRhNSIgXSwgLy8gRGF0YQoJCVsgIkxldHR1Y2UiLCAgIkthbGUiLCAgIkNlbGVyeSIsICAiQmFzaWwiLCAgIkNpbGFudHJvIiBdICk7IC8vIERpc3BsYXkKfQoKLy8gR2VuZXJhdGVzIGFuZCByZXR1cm5zIHRoZSB0YWIncyBIVE1MLgovLyBVc2VzIHRoZSBzYW1wbGUgQ1NTIHRvIHN0eWxlIHRoZSByZXR1cm5lZCBIVE1MIGZvciBmYXN0IHByb3RvdHlwaW5nLgovLyBGb3IgcHJvZHVjdGlvbiBkZXBsb3ltZW50cyBwbGVhc2UgYWRkIHRoZSBuZWNlc3NhcnkgQ1NTIHRvIHRoZSBJRE1BUFBTIFRoZW1lLgpmdW5jdGlvbiBnZXRUYWJIVE1MKCBmaWVsZG5hbWUgKSB7CgkKCS8vIEluc3RhbnRpYXRlcyB0aGUgbW9kdWxlIGZvciB0aGlzIHRhYi4KCS8vIFdlIG5lZWQgb25lIGluc3RhbmNlIHBlciB0YWJiZWQgY29udHJvbCBpbiB0aGUgcGFnZQoJdmFyIGNvbnRyb2wgPSBJQXRvb2xzLnRhYkN0cmxGYWN0b3J5KCk7CgkKCS8vIEFkZGluZyB0aGUgdGFicy4gVGhleSBhcmUgb3JkZXJlZCBieSB0aGUgbnVtYmVyIG9uIHRoZSAzcmQgcGFyYW1ldGVyCgljb250cm9sLmFkZFRhYiggInRhYjEiLCAiRnJ1aXRzIiwgMSwgWyAidDFUZXh0IiwgInQxZG5sb29rdXAiLCAidDFtb3ZlZnJvbSIsICJ0MW1vdmV0byIgXSApOwoJY29udHJvbC5hZGRUYWIoICJ0YWIyIiwgIk90aGVyIiwgMywgWyAidDJUZXh0IiwgInQybG9va3VwIiBdICk7Cgljb250cm9sLmFkZFRhYiggInRhYjMiLCAiVmVnZXRhYmxlcyIsIDIsIFsgInQzYWRkZnJvbSIsICJ0M2FkZHRvIiBdICk7CgkKCS8vIFRoZXJlIGFyZSAyIHdheSB0byBoYW5kbGUgdmlzaWJpbGl0eSBvZiB0aGUgdGFiYmVkIGZpZWxkcy4gCgkKCS8vIC1GaXJzdCBpcyB0byBob29rIGN1c3RvbSBldmVudHMgb24gZWFjaCB0YWIncyBmaWVsZCB3aXRoIAoJLy8gSUF0b29scy5maWVuZHZpc2liaWxpdHkoIGV2ZW50LCBmaWVsZCApCgkvLyBhbmQgdGhlbiBzZXQgdGhlIGV2ZW50cyBpbiB0aGUgY29udHJvbCBhcyBzaG93biBiZWxvdy4gCgkvLyBUaGlzIGFwcHJvYWNoIGFsc28gcmVxdWlyZXMgdXMgdG8gcHJvdmlkZSBhIGZpZWxkIG5hbWUgbGlzdCBwZXIgdGFiIGluCgkvLyBhbiBhcnJheSBhcyBzaG93biBhYm92ZS4KCQoJLy8gLVNlY29uZCBtZXRob2QgaXMgdG8gcHJvdmlkZSBhbiBlbXB0eSBhcnJheSBhYm92ZSwgYW5kIGEgNXRoIHBhcmFtZXRlciAKCS8vIHRoYXQgaXMgYSBmdW5jdGlvbiB0byBiZSBjYWxsZWQgd2hlbmV2ZXIgdGhlIHRhYiBiZWNvbWVzIGFjdGl2ZSBvciBpbmFjdGl2ZS4KCS8vIHRoZSBjYWxsYmFjayBmdW5jdGlvbiBwcm92aWRlZCB3aWxsIGJlIGNhbGxlZCB3aXRoIDIgcGFyYW1ldGVycyAtIAoJLy8gdGFiIGlkIGFuZCBhIHN0cmluZyB3aXRoICdlbnRlcicgd2hlbiB0aGUgdGFiIGJlY29tZXMgYWN0aXZlIGFuZCAnbGVhdmUnIHdoZW4gaXQKCS8vIGJlY29tZXMgaW5hY3RpdmUuIFRoZW4gYWRkIHZpc2liaWxpdHkgY29kZSB0byBzYWlkIGNhbGxiYWNrCgkKCS8vIFVzaW5nIHRoZSBmaXJzdCBhcHByb2FjaCBoZXJlLiAKCWNvbnRyb2wuc2V0RmllbGRFdmVudE5hbWUoICJ0MVRleHQiLCAidDFUZXh0LWN0cmwiICk7Cgljb250cm9sLnNldEZpZWxkRXZlbnROYW1lKCAidDFkbmxvb2t1cCIsICJ0MWRubG9va3VwLWN0cmwiICk7Cgljb250cm9sLnNldEZpZWxkRXZlbnROYW1lKCAidDFtb3ZlZnJvbSIsICJ0MW1vdmVmcm9tLWN0cmwiICk7Cgljb250cm9sLnNldEZpZWxkRXZlbnROYW1lKCAidDFtb3ZldG8iLCAidDFtb3ZldG8tY3RybCIgKTsKCWNvbnRyb2wuc2V0RmllbGRFdmVudE5hbWUoICJ0MlRleHQiLCAidDJUZXh0LWN0cmwiICk7Cgljb250cm9sLnNldEZpZWxkRXZlbnROYW1lKCAidDJsb29rdXAiLCAidDJsb29rdXAtY3RybCIgKTsKCWNvbnRyb2wuc2V0RmllbGRFdmVudE5hbWUoICJ0M2FkZGZyb20iLCAidDNhZGRmcm9tLWN0cmwiICk7Cgljb250cm9sLnNldEZpZWxkRXZlbnROYW1lKCAidDNhZGR0byIsICJ0M2FkZHRvLWN0cmwiICk7CgkKCS8vIFNpbmNlIHRoaXMgaXMgYSBzZWxmLWNvbnRhaW5lZCBleGFtcGxlIHdlIGFyZSB1c2luZyB0aGUgCgkvLyBidWlsdCBpbiBzYW1wbGUgQ1NTIHRvIHN0eWxlIHRoZSB0YWJzLiBJdCBpcyBwb3NzaWJsZSB0byBjaGFuZ2UgdGhlIAoJLy8gQ1NTIGNsYXNzIG5hbWVzIHVzZWQgdG8gbWF0Y2ggeW91ciBzdGFuZGFyZHMgd2l0aCBzZXRDU1NDbGFzc05hbWUoKQoJdmFyIHJldEhUTUwgPSBjb250cm9sLmdldFNhbXBsZUNTUygpOwoJCgkvLyBBcHBlbmRpbmcgdGhlIHRhYmJlZCBIRU1MIHRvIHRoZSBvdXRwdXQuIFdlIG5lZWQgdG8gcGFzcyBhIHVuaXF1ZUlELCAKCS8vIEluIHRoaXMgc2FtcGxlIGNvZGUganVzdCBhZGRpbmcgdGhlIHN0cmluZyBUQUJTIHRvIHRoZSB2YWx1ZXIgcHJvdmlkZWQgd2hlbiAKCS8vIHRoaXMgZnVuY3Rpb24gd2FzIGNhbGxlZC4KCXJldEhUTUwgKz0gY29udHJvbC5nZXRUYWJIVE1MKCBmaWVsZG5hbWUgKyAiVEFCUyIgKTsKCQoJLy8gUmV0dXJuaW5nIGFsbCB0aGUgSFRNTCBhcyBhIHN0cmluZyBzbyB0aGF0IGl0IGNhbiBiZSBzZXQgb24gdGhlIEhUTUwgZmllbGQKCS8vIHRoYXQgd2lsbCBjb250YWluIHRoZSB0YWJiZWQgY29udHJvbAoJcmV0dXJuIHJldEhUTUw7Cn08L3NjcmlwdD4KICAgICAgICAgICAgICAgIDxmaWVsZAogICAgICAgICAgICAgICAgbmFtZT0idGl0bGUiCiAgICAgICAgICAgICAgICAgICAgdmlzaWJsZT0idHJ1ZSI+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRyb2wKICAgICAgICAgICAgICAgICAgICBjb250cm9sLXR5cGU9IlRpdGxlIgogICAgICAgICAgICAgICAgICAgIGVkaXRhYmxlPSJmYWxzZSIvPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9ImZyIj5BcHByb2JhdGlvbiBzw6lxdWVudGllbGxlIGVuIGRldXggw6l0YXBlcyAodGltZW91dCBhcHByb3V2w6kpPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9Im5sIj5PcGVlbnZvbGdlbmRlIGdvZWRrZXVyaW5nIGluIHR3ZWUgc3RhcHBlbiAoZ29lZGdla2V1cmQgbmEgdGltZS1vdXQpPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9InB0Ij5BcHJvdmHDp8OjbyBTZXHDvGVuY2lhbCBkZSBEdWFzIEV0YXBhcyAoVGVtcG8gZGUgRXNwZXJhIEFwcm92YSk8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0icnUiPtCU0LLRg9GF0Y3RgtCw0L/QvdC+0LUg0L/QvtGB0LvQtdC00L7QstCw0YLQtdC70YzQvdC+0LUg0L/QvtC00YLQstC10YDQttC00LXQvdC40LUgKNC40YHRgtC10YfQtdC90LjQtSDRgdGA0L7QutCwINC+0LfQvdCw0YfQsNC10YIg0L/QvtC00YLQstC10YDQttC00LXQvdC40LUpPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9InpoLVRXIj7lhanmrrXlvI/pgKPnuozmoLjlh4YgKOmAvuaZguaguOWHhik8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iemgtQ04iPuS4pOatpemhuuW6j+aJueWHhu+8iOaJueWHhui2heaXtu+8iTwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJlbiI+U2FtcGxlIEZvcm0gdXNpbmcgSUF0b29scyA8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iZXMiPkFwcm9iYWNpw7NuIHNlY3VlbmNpYWwgZW4gZG9zIHBhc29zIChhcHJvYmFjacOzbiBhbCBhbGNhbnphciBlbCB0aWVtcG8gbMOtbWl0ZSk8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iaXQiPkFwcHJvdmF6aW9uZSBzZXF1ZW56aWFsZSBpbiBkdWUgcGFzc2FnZ2kgKGFwcHJvdmF6aW9uZSBpbiBjYXNvIGRpIHRpbWVvdXQpPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9InN2Ij5TZWt2ZW50aWVsbHQgZ29ka8Okbm5hbmRlIGkgdHbDpSBzdGVnIChnb2Rrw6RubnMgdmlkIHRpbWVvdXQpPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9ImRlIj5TZXF1ZW56aWVsbGUgR2VuZWhtaWd1bmcgaW4gendlaSBTdHVmZW4gKEdlbmVobWlndW5nIGJlaSBaZWl0w7xiZXJzY2hyZWl0dW5nKTwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgeG1sOmxhbmc9ImphIj7jg4Tjg7zjgrnjg4bjg4Pjg5fpoIbmrKHmib/oqo0o44K/44Kk44Og44Ki44Km44OI44Gr44Gq44KL44Go5om/6KqN44GX44Gf44GT44Go44Gr44Gq44KK44G+44GZKTwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgIDwvZmllbGQ+CiAgICAgICAgICAgICAgICA8ZmllbGQKICAgICAgICAgICAgICAgIG5hbWU9InN1YmhlYWRpbmciCiAgICAgICAgICAgICAgICAgICAgdmlzaWJsZT0idHJ1ZSI+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRyb2wKICAgICAgICAgICAgICAgICAgICBjb250cm9sLXR5cGU9IlRpdGxlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdGFibGU9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHByb3BzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHByb3AKICAgICAgICAgICAgICAgICAgICBuYW1lPSJmb250LXNpemUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2YWx1ZT5tZWRpdW08L3ZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wcm9wPgogICAgICAgICAgICAgICAgICAgICAgICA8L3Byb3BzPgogICAgICAgICAgICAgICAgICAgIDwvY29udHJvbD4KICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJmciI+Q2xpcXVleiBzdXIgJ1NvdW1ldHRyZScgcG91ciBkZW1hbmRlciBsZSBkcm9pdC48L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0ibmwiPktpZXMgJ0luZGllbmVuJyBvbSBkZSByZWNodGVuIGFhbiB0ZSB2cmFnZW4uPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9InB0Ij5QcmVzc2lvbmUgJ1N1Ym1ldGVyJyBwYXJhIHNvbGljaXRhciBvIGRpcmVpdG8uPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9InJ1Ij7QndCw0LbQvNC40YLQtSDQutC90L7Qv9C60YMgXCLQn9C10YDQtdC00LDRgtGMXCIg0LTQu9GPINC30LDQv9GA0L7RgdCwINC/0L7Qu9C90L7QvNC+0YfQuNC5LjwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJ6aC1UVyI+6KuL5oyJ44CM5o+Q5Lqk44CN55Sz6KuL5o6I5qyK44CCPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9InpoLUNOIj7mjInigJzmj5DkuqTigJ3ku6Xor7fmsYLmnYPliKnjgII8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iZW4iPlRoaXMgZm9ybSB1c2VzIHRoZSB0YWJiZWQgY29udHJvbCBhbmQgdGhlIHBpY2tsaXN0IGF1eGlsaWFyeSBmdW50aW9ucy48L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iZXMiPlB1bHNlIEVudmlhciBwYXJhIHNvbGljaXRhciBlbCBkZXJlY2hvLjwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJpdCI+RmFyZSBjbGljIHN1ICdJbnZpYScgcGVyIHJpY2hpZWRlcmUgbCdhdXRvcml6emF6aW9uZS48L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0ic3YiPlRyeWNrIHDDpSBTa2lja2EgbsOkciBkdSB2aWxsIGJlZ8OkcmEgcsOkdHRpZ2hldGVuLjwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJkZSI+V8OkaGxlbiBTaWUgJ1NlbmRlbicgenVtIEFuZm9yZGVybiBkZXIgQmVyZWNodGlndW5nLjwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJqYSI+44Ko44Oz44K/44Kk44OI44Or44Oh44Oz44OI44KS6KaB5rGC44GZ44KL44Gr44Gv77y76YCB5L+h77y944KS5oq844GX44G+44GZ44CCPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgPC9maWVsZD4KICAgICAgICAgICAgICAgIDxmaWVsZD4KICAgICAgICAgICAgICAgICAgICA8Y29udHJvbAogICAgICAgICAgICAgICAgY29udHJvbC10eXBlPSJMaW5lQnJlYWsiLz4KICAgICAgICAgICAgICAgIDwvZmllbGQ+CiAgICAgICAgICAgICAgICA8ZmllbGQKICAgICAgICAgICAgICAgIGRhdGEtdHlwZT0iZG4iIG5hbWU9InJlY2lwaWVudCIKICAgICAgICAgICAgICAgICAgICB2aXNpYmxlPSJ0cnVlIj4KICAgICAgICAgICAgICAgICAgICA8Y29udHJvbAogICAgICAgICAgICAgICAgICAgIGNvbnRyb2wtdHlwZT0iRE5EaXNwbGF5IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdGFibGU9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHByb3BzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHByb3AKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9ImRpc3BsYXktZXhwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dmFsdWU+Rmlyc3ROYW1lIExhc3ROYW1lPC92YWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcHJvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwcm9wCiAgICAgICAgICAgICAgICAgICAgbmFtZT0iZGlzcGxheS1lbnRpdHlkZWYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2YWx1ZT51c2VyPC92YWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcHJvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wcm9wcz4KICAgICAgICAgICAgICAgICAgICA8L2NvbnRyb2w+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iZnIiPkRlc3RpbmF0YWlyZSA6PC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9Im5sIj5PbnR2YW5nZXI6PC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9InB0Ij5EZXN0aW5hdMOhcmlvOjwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJydSI+0J/QvtC70YPRh9Cw0YLQtdC70Yw6PC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9InpoLVRXIj7mlLbku7bogIXvvJo8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iemgtQ04iPuaUtuS7tuS6ujo8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iZW4iPlJlY2lwaWVudDo8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iZXMiPkRlc3RpbmF0YXJpbzo8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iaXQiPkRlc3RpbmF0YXJpbzo8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0ic3YiPk1vdHRhZ2FyZTo8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iZGUiPkVtcGbDpG5nZXI6PC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9ImphIj7lj5fkv6HogIU6PC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgPC9maWVsZD4KICAgICAgICAgICAgICAgIDxmaWVsZD4KICAgICAgICAgICAgICAgICAgICA8Y29udHJvbAogICAgICAgICAgICAgICAgY29udHJvbC10eXBlPSJMaW5lQnJlYWsiLz4KICAgICAgICAgICAgICAgIDwvZmllbGQ+CiAgICAgICAgICAgICAgICA8ZmllbGQKICAgICAgICAgICAgICAgIGRhdGEtdHlwZT0ic3RyaW5nIiBuYW1lPSJyZWFzb24iCiAgICAgICAgICAgICAgICAgICAgdmlzaWJsZT0idHJ1ZSI+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRyb2wKICAgICAgICAgICAgICAgICAgICBjb250cm9sLXR5cGU9IlRleHQiIGVkaXRhYmxlPSJ0cnVlIgogICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkPSJ0cnVlIi8+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iZnIiPlJhaXNvbiBkZSBsYSByZXF1w6p0ZSA6PC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9Im5sIj5SZWRlbiB2b29yIGFhbnZyYWFnOjwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJwdCI+TW90aXZvIGRhIHNvbGljaXRhw6fDo286PC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9InJ1Ij7Qn9GA0LjRh9C40L3QsCDQtNC70Y8g0LfQsNC/0YDQvtGB0LA6PC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9InpoLVRXIj7nlLPoq4vljp/lm6A6PC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9InpoLUNOIj7or7fmsYLljp/lm6A6PC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9ImVuIj5SZWFzb24gZm9yIHJlcXVlc3Q6PC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9ImVzIj5Nb3Rpdm8gZGUgbGEgcGV0aWNpw7NuOjwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJpdCI+TW90aXZvIGRlbGxhIHJpY2hpZXN0YTo8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0ic3YiPk9yc2FrIHRpbGwgYmVnw6RyYW46PC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9ImRlIj5HcnVuZCBmw7xyIEFuZm9yZGVydW5nOjwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJqYSI+6KaB5rGC44Gu55CG55SxOjwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgIDwvZmllbGQ+CiAgICAgICAgICAgICAgICA8ZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRyb2wKICAgICAgICAgICAgICAgIGNvbnRyb2wtdHlwZT0iTGluZUJyZWFrIi8+CiAgICAgICAgICAgICAgICA8L2ZpZWxkPgogICAgICAgICAgICAgICAgPGZpZWxkCiAgICAgICAgICAgICAgICBkYXRhLXR5cGU9InN0cmluZyIKICAgICAgICAgICAgICAgICAgICBuYW1lPSJ0YWJjb250cm9sIj4KICAgICAgICAgICAgICAgICAgICA8Y29udHJvbAogICAgICAgICAgICAgICAgICAgIGNvbnRyb2wtdHlwZT0iSHRtbCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRhYmxlPSJ0cnVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHByb3BzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHByb3AKICAgICAgICAgICAgICAgICAgICBuYW1lPSJjb2xzcGFuIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dmFsdWU+NDwvdmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Byb3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcHJvcHM+CiAgICAgICAgICAgICAgICAgICAgPC9jb250cm9sPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9ImVuIj50YWJjb250cm9sPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgPC9maWVsZD4KICAgICAgICAgICAgICAgIDxmaWVsZD4KICAgICAgICAgICAgICAgICAgICA8Y29udHJvbAogICAgICAgICAgICAgICAgY29udHJvbC10eXBlPSJMaW5lQnJlYWsiLz4KICAgICAgICAgICAgICAgIDwvZmllbGQ+CiAgICAgICAgICAgICAgICA8ZmllbGQKICAgICAgICAgICAgICAgIGRhdGEtdHlwZT0ic3RyaW5nIgogICAgICAgICAgICAgICAgICAgIG5hbWU9InQxVGV4dCI+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRyb2wKICAgICAgICAgICAgICAgICAgICBjb250cm9sLXR5cGU9IlRleHQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0YWJsZT0idHJ1ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwcm9wcz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwcm9wCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJ0MVRleHQtY3RybCIKICAgICAgICAgICAgICAgICAgICB0eXBlPSJldmVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHZhbHVlPklBdG9vbHMuZmllbGRWaXNpYmlsaXR5KCBldmVudCwgZmllbGQgKTs8L3ZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wcm9wPgogICAgICAgICAgICAgICAgICAgICAgICA8L3Byb3BzPgogICAgICAgICAgICAgICAgICAgIDwvY29udHJvbD4KICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgeG1sOmxhbmc9ImVuIj5Tb21lIHRleHQ8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICA8L2ZpZWxkPgogICAgICAgICAgICAgICAgPGZpZWxkCiAgICAgICAgICAgICAgICBkYXRhLXR5cGU9ImRuIgogICAgICAgICAgICAgICAgICAgIG5hbWU9InQxZG5sb29rdXAiPgogICAgICAgICAgICAgICAgICAgIDxjb250cm9sCiAgICAgICAgICAgICAgICAgICAgY29udHJvbC10eXBlPSJETkxvb2t1cCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRhYmxlPSJ0cnVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHByb3BzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHByb3AKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9InQxZG5sb29rdXAtY3RybCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9ImV2ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dmFsdWU+SUF0b29scy5maWVsZFZpc2liaWxpdHkoIGV2ZW50LCBmaWVsZCApOzwvdmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Byb3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cHJvcAogICAgICAgICAgICAgICAgICAgIG5hbWU9ImRpc3BsYXktZW50aXR5ZGVmIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dmFsdWU+dXNlcjwvdmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Byb3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcHJvcHM+CiAgICAgICAgICAgICAgICAgICAgPC9jb250cm9sPgogICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9ImVuIj5Tb21lIHVzZXI8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICA8L2ZpZWxkPgogICAgICAgICAgICAgICAgPGZpZWxkPgogICAgICAgICAgICAgICAgICAgIDxjb250cm9sCiAgICAgICAgICAgICAgICBjb250cm9sLXR5cGU9IkxpbmVCcmVhayIvPgogICAgICAgICAgICAgICAgPC9maWVsZD4KICAgICAgICAgICAgICAgIDxmaWVsZAogICAgICAgICAgICAgICAgZGF0YS10eXBlPSJzdHJpbmciCiAgICAgICAgICAgICAgICAgICAgbmFtZT0idDFtb3ZlZnJvbSI+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRyb2wKICAgICAgICAgICAgICAgICAgICBjb250cm9sLXR5cGU9IlBpY2tMaXN0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdGFibGU9InRydWUiPgogICAgICAgICAgICAgICAgICAgICAgICA8cHJvcHM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cHJvcAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT0ibmJsaW5lcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHZhbHVlPjU8L3ZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wcm9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHByb3AKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9InNvcnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2YWx1ZT5mYWxzZTwvdmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Byb3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cHJvcAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT0idDFtb3ZlZnJvbS1jdHJsIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0iZXZlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2YWx1ZT5JQXRvb2xzLmZpZWxkVmlzaWJpbGl0eSggZXZlbnQsIGZpZWxkICk7PC92YWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcHJvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwcm9wCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJvbmRibGNsaWNrIgogICAgICAgICAgICAgICAgICAgIHR5cGU9ImV2ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dmFsdWU+SUF0b29scy5waWNrbGlzdC5tb3ZlVG8oIGZpZWxkLmdldFZhbHVlcygpLCBmaWVsZC5nZXROYW1lKCksICJ0MW1vdmV0byIgKTs8L3ZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wcm9wPgogICAgICAgICAgICAgICAgICAgICAgICA8L3Byb3BzPgogICAgICAgICAgICAgICAgICAgIDwvY29udHJvbD4KICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgeG1sOmxhbmc9ImVuIj5GcnVpdCBsaXN0PC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgPC9maWVsZD4KICAgICAgICAgICAgICAgIDxmaWVsZAogICAgICAgICAgICAgICAgZGF0YS10eXBlPSJzdHJpbmciCiAgICAgICAgICAgICAgICAgICAgbmFtZT0idDFtb3ZldG8iPgogICAgICAgICAgICAgICAgICAgIDxjb250cm9sCiAgICAgICAgICAgICAgICAgICAgY29udHJvbC10eXBlPSJQaWNrTGlzdCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRhYmxlPSJ0cnVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHByb3BzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHByb3AKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9Im5ibGluZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2YWx1ZT41PC92YWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcHJvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwcm9wCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJzb3J0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dmFsdWU+ZmFsc2U8L3ZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wcm9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHByb3AKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9InQxbW92ZXRvLWN0cmwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJldmVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHZhbHVlPklBdG9vbHMuZmllbGRWaXNpYmlsaXR5KCBldmVudCwgZmllbGQgKTs8L3ZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wcm9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHByb3AKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9Im9uZGJsY2xpY2siCiAgICAgICAgICAgICAgICAgICAgdHlwZT0iZXZlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2YWx1ZT4vLyBNb3ZpbmcgYmFjayB0byB0MW1vdmVmcm9tOgpJQXRvb2xzLnBpY2tsaXN0Lm1vdmVUbyggZmllbGQuZ2V0VmFsdWVzKCksIGZpZWxkLmdldE5hbWUoKSwgInQxbW92ZWZyb20iICk7Ci8vIEV4YW1wbGUgcmVtb3ZpbmcgdGhlIGl0ZW0uIFNpbmNlIHRoZSBvdGhlciBmaWVsZCBpcyBhIG1vdmUgd2Ugd291bGQKLy8gZXZlbnR1YWxseSBlbXB0eSBib3RoIGxpc3RzIGlmIHVzaW5nIHRoaXMgb25lLiBPZiBjb3Vyc2UgaWYgdDFtb3ZlZnJvbSBpcyAKLy8gcG9wdWxhdGVkIGZyb20gb3RoZXIgZm9ybSBpbnRlcmFjdGlvbnMgdGhlbiB0aGlzIGlzIG5vdCBhbiBpc3N1ZS4KLy8gSUF0b29scy5waWNrbGlzdC5yZW1vdmVGcm9tTW92ZWQoIGZpZWxkLmdldFZhbHVlcygpLCBmaWVsZC5nZXROYW1lKCkgKTsgPC92YWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcHJvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wcm9wcz4KICAgICAgICAgICAgICAgICAgICA8L2NvbnRyb2w+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iZW4iPlNlbGVjdGVkIEZydWl0PC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgPC9maWVsZD4KICAgICAgICAgICAgICAgIDxmaWVsZD4KICAgICAgICAgICAgICAgICAgICA8Y29udHJvbAogICAgICAgICAgICAgICAgY29udHJvbC10eXBlPSJMaW5lQnJlYWsiLz4KICAgICAgICAgICAgICAgIDwvZmllbGQ+CiAgICAgICAgICAgICAgICA8ZmllbGQKICAgICAgICAgICAgICAgIGRhdGEtdHlwZT0ic3RyaW5nIgogICAgICAgICAgICAgICAgICAgIG5hbWU9InQyVGV4dCI+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRyb2wKICAgICAgICAgICAgICAgICAgICBjb250cm9sLXR5cGU9IlRleHQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0YWJsZT0idHJ1ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwcm9wcz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwcm9wCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJ0MlRleHQtY3RybCIKICAgICAgICAgICAgICAgICAgICB0eXBlPSJldmVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHZhbHVlPklBdG9vbHMuZmllbGRWaXNpYmlsaXR5KCBldmVudCwgZmllbGQgKTs8L3ZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wcm9wPgogICAgICAgICAgICAgICAgICAgICAgICA8L3Byb3BzPgogICAgICAgICAgICAgICAgICAgIDwvY29udHJvbD4KICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgeG1sOmxhbmc9ImVuIj5Nb3JlIHRleHQ8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICA8L2ZpZWxkPgogICAgICAgICAgICAgICAgPGZpZWxkCiAgICAgICAgICAgICAgICBkYXRhLXR5cGU9ImRuIgogICAgICAgICAgICAgICAgICAgIG5hbWU9InQybG9va3VwIj4KICAgICAgICAgICAgICAgICAgICA8Y29udHJvbAogICAgICAgICAgICAgICAgICAgIGNvbnRyb2wtdHlwZT0iRE5Mb29rdXAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0YWJsZT0idHJ1ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwcm9wcz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwcm9wCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJ0Mmxvb2t1cC1jdHJsIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0iZXZlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2YWx1ZT5JQXRvb2xzLmZpZWxkVmlzaWJpbGl0eSggZXZlbnQsIGZpZWxkICk7PC92YWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcHJvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwcm9wCiAgICAgICAgICAgICAgICAgICAgbmFtZT0iZGlzcGxheS1lbnRpdHlkZWYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2YWx1ZT51c2VyPC92YWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcHJvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wcm9wcz4KICAgICAgICAgICAgICAgICAgICA8L2NvbnRyb2w+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iZW4iPk1vcmUgdXNlcjwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgIDwvZmllbGQ+CiAgICAgICAgICAgICAgICA8ZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRyb2wKICAgICAgICAgICAgICAgIGNvbnRyb2wtdHlwZT0iTGluZUJyZWFrIi8+CiAgICAgICAgICAgICAgICA8L2ZpZWxkPgogICAgICAgICAgICAgICAgPGZpZWxkCiAgICAgICAgICAgICAgICBkYXRhLXR5cGU9InN0cmluZyIKICAgICAgICAgICAgICAgICAgICBuYW1lPSJ0M2FkZGZyb20iPgogICAgICAgICAgICAgICAgICAgIDxjb250cm9sCiAgICAgICAgICAgICAgICAgICAgY29udHJvbC10eXBlPSJQaWNrTGlzdCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRhYmxlPSJ0cnVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHByb3BzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHByb3AKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9Im5ibGluZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2YWx1ZT41PC92YWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcHJvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwcm9wCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJzb3J0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dmFsdWU+ZmFsc2U8L3ZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wcm9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHByb3AKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9InQzYWRkZnJvbS1jdHJsIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0iZXZlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2YWx1ZT5JQXRvb2xzLmZpZWxkVmlzaWJpbGl0eSggZXZlbnQsIGZpZWxkICk7PC92YWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcHJvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwcm9wCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJvbmRibGNsaWNrIgogICAgICAgICAgICAgICAgICAgIHR5cGU9ImV2ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dmFsdWU+SUF0b29scy5waWNrbGlzdC5hZGRUbyggZmllbGQuZ2V0VmFsdWVzKCksIGZpZWxkLmdldE5hbWUoKSwgInQzYWRkdG8iICk7PC92YWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcHJvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wcm9wcz4KICAgICAgICAgICAgICAgICAgICA8L2NvbnRyb2w+CiAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJlbiI+UGxhbnRzPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgPC9maWVsZD4KICAgICAgICAgICAgICAgIDxmaWVsZAogICAgICAgICAgICAgICAgZGF0YS10eXBlPSJzdHJpbmciCiAgICAgICAgICAgICAgICAgICAgbmFtZT0idDNhZGR0byI+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRyb2wKICAgICAgICAgICAgICAgICAgICBjb250cm9sLXR5cGU9IlBpY2tMaXN0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdGFibGU9InRydWUiPgogICAgICAgICAgICAgICAgICAgICAgICA8cHJvcHM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cHJvcAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT0ibmJsaW5lcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHZhbHVlPjU8L3ZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wcm9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHByb3AKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9InNvcnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2YWx1ZT5mYWxzZTwvdmFsdWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Byb3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cHJvcAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT0idDNhZGR0by1jdHJsIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0iZXZlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2YWx1ZT5JQXRvb2xzLmZpZWxkVmlzaWJpbGl0eSggZXZlbnQsIGZpZWxkICk7PC92YWx1ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcHJvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwcm9wCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJvbmRibGNsaWNrIgogICAgICAgICAgICAgICAgICAgIHR5cGU9ImV2ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dmFsdWU+SUF0b29scy5waWNrbGlzdC5yZW1vdmVGcm9tQWRkZWQoIGZpZWxkLmdldFZhbHVlcygpLCBmaWVsZC5nZXROYW1lKCkgKTs8L3ZhbHVlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wcm9wPgogICAgICAgICAgICAgICAgICAgICAgICA8L3Byb3BzPgogICAgICAgICAgICAgICAgICAgIDwvY29udHJvbD4KICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJlbiI+U2VsZWN0ZWQgUGxhbnRzPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgPC9maWVsZD4KICAgICAgICAgICAgICAgIDxmaWVsZD4KICAgICAgICAgICAgICAgICAgICA8Y29udHJvbAogICAgICAgICAgICAgICAgY29udHJvbC10eXBlPSJMaW5lQnJlYWsiLz4KICAgICAgICAgICAgICAgIDwvZmllbGQ+CiAgICAgICAgICAgICAgICA8ZmllbGQKICAgICAgICAgICAgICAgIGRhdGEtdHlwZT0ic3RyaW5nIiBuYW1lPSJzdG9yZVNlbGVjdGlvbnMiCiAgICAgICAgICAgICAgICAgICAgdmlzaWJsZT0iZmFsc2UiPgogICAgICAgICAgICAgICAgICAgIDxjb250cm9sCiAgICAgICAgICAgICAgICAgICAgY29udHJvbC10eXBlPSJUZXh0IiBlZGl0YWJsZT0iZmFsc2UiCiAgICAgICAgICAgICAgICAgICAgdmlzaWJsZT0iZmFsc2UiLz4KICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJlbiI+c3RvcmVTZWxlY3Rpb25zPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgPC9maWVsZD4KICAgICAgICAgICAgICAgIDxmaWVsZD4KICAgICAgICAgICAgICAgICAgICA8Y29udHJvbAogICAgICAgICAgICAgICAgY29udHJvbC10eXBlPSJMaW5lQnJlYWsiLz4KICAgICAgICAgICAgICAgIDwvZmllbGQ+CiAgICAgICAgICAgICAgICA8YWN0aW9ucwogICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uPSJib3R0b20iPgogICAgICAgICAgICAgICAgICAgIDxhY3Rpb24KICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT0iU3VibWl0QWN0aW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGNvbnRyb2wKICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbC10eXBlPSJCdXR0b24iCiAgICAgICAgICAgICAgICAgICAgICAgIHZpc2libGU9InRydWUiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9ImZyIj5Tb3VtZXR0cmU8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJubCI+SW5kaWVuZW48L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJwdCI+U3VibWV0ZXI8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJydSI+0J/QtdGA0LXQtNCw0YLRjDwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9InpoLVRXIj7mj5DkuqQ8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJ6aC1DTiI+5o+Q5LqkPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iZW4iPlN1Ym1pdDwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9ImVzIj5FbnZpYXI8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJpdCI+SW52aWE8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJzdiI+U2tpY2thPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iZGUiPlNlbmRlbjwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iamEiPumAgeS/oTwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8L2FjdGlvbj4KICAgICAgICAgICAgICAgICAgICA8YWN0aW9uCiAgICAgICAgICAgICAgICAgICAgYmxvY2stb24tZXJyb3I9ImZhbHNlIgogICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJDYW5jZWxBY3Rpb24iPgogICAgICAgICAgICAgICAgICAgICAgICA8Y29udHJvbAogICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sLXR5cGU9IkJ1dHRvbiIKICAgICAgICAgICAgICAgICAgICAgICAgdmlzaWJsZT0idHJ1ZSIvPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iZnIiPkFubnVsZXI8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJubCI+QW5udWxlcmVuPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0icHQiPkNhbmNlbGFyPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0icnUiPtCe0YLQvNC10L3QsDwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9InpoLVRXIj7lj5bmtog8L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICAgICAgICAgIHhtbDpsYW5nPSJ6aC1DTiI+5Y+W5raIPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0iZW4iPkNhbmNlbDwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9ImVzIj5DYW5jZWxhcjwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9Iml0Ij5Bbm51bGxhPC9kaXNwbGF5LWxhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGlzcGxheS1sYWJlbAogICAgICAgICAgICAgICAgICAgICAgICB4bWw6bGFuZz0ic3YiPkF2YnJ5dDwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpc3BsYXktbGFiZWwKICAgICAgICAgICAgICAgICAgICAgICAgeG1sOmxhbmc9ImRlIj5BYmJyZWNoZW48L2Rpc3BsYXktbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXNwbGF5LWxhYmVsCiAgICAgICAgICAgICAgICB4bWw6bGFuZz0iamEiPuOCreODo+ODs+OCu+ODqzwvZGlzcGxheS1sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8L2FjdGlvbj4KICAgICAgICAgICAgICAgIDwvYWN0aW9ucz4KICAgICAgICAgICAgICAgIDxldmVudAogICAgICAgIGV2ZW50LXR5cGU9Im9ubG9hZCI+Zm9ybV9vbmxvYWQoIGZpZWxkLCBmb3JtLCBJRFZhdWx0ICk7PC9ldmVudD4KICAgICAgICAgICAgPC9jb250ZW50PgogICAgICAgIDwvZm9ybT4KICAgICAgICA8ZGF0YS1pdGVtCiAgICAgICAgZGF0YS10eXBlPSJzdHJpbmciIG5hbWU9InQxVGV4dCIKICAgICAgICB0YXJnZXQ9ImZsb3dkYXRhLlN0YXJ0L3JlcWZvcm0vdDFUZXh0IgogICAgICAgIHRhcmdldC10eXBlPSJzaW5nbGUtdmFsdWUiLz4KICAgICAgICA8ZGF0YS1pdGVtIGRhdGEtdHlwZT0iZG4iCiAgICAgICAgbmFtZT0idDFkbmxvb2t1cCIgdGFyZ2V0PSJmbG93ZGF0YS5TdGFydC9yZXFmb3JtL3QxZG5sb29rdXAiCiAgICAgICAgdGFyZ2V0LXR5cGU9InNpbmdsZS12YWx1ZSIvPgogICAgICAgIDxkYXRhLWl0ZW0KICAgICAgICBkYXRhLXR5cGU9InN0cmluZyIgbmFtZT0idDJUZXh0IgogICAgICAgIHRhcmdldD0iZmxvd2RhdGEuU3RhcnQvcmVxZm9ybS90MlRleHQiCiAgICAgICAgdGFyZ2V0LXR5cGU9InNpbmdsZS12YWx1ZSIvPgogICAgICAgIDxkYXRhLWl0ZW0gZGF0YS10eXBlPSJkbiIKICAgICAgICBuYW1lPSJ0Mmxvb2t1cCIgdGFyZ2V0PSJmbG93ZGF0YS5TdGFydC9yZXFmb3JtL3QybG9va3VwIgogICAgICAgIHRhcmdldC10eXBlPSJzaW5nbGUtdmFsdWUiLz4KICAgICAgICA8ZGF0YS1pdGVtCiAgICAgICAgZGF0YS10eXBlPSJzdHJpbmciIG5hbWU9InN0b3JlU2VsZWN0aW9ucyIKICAgICAgICB0YXJnZXQ9ImZsb3dkYXRhLlN0YXJ0L3JlcWZvcm0vc2VsZWN0aW9ucyIgdGFyZ2V0LXR5cGU9InNpbmdsZS12YWx1ZSIvPgogICAgPC9wcm92aXNpb24tcmVxdWVzdD4KPCEtLT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKQ29weXJpZ2h0IChjKSAyMDA2IE5vdmVsbCwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLgoKVEhJUyBXT1JLIElTIFNVQkpFQ1QgVE8gVS5TLiBBTkQgSU5URVJOQVRJT05BTCBDT1BZUklHSFQgTEFXUyBBTkQgVFJFQVRJRVMKTk8gUEFSVCBPRiBUSElTIFdPUksgTUFZIEJFIFVTRUQsIFBSQUNUSUNFRCwgUEVSRk9STUVEIENPUElFRCwgRElTVFJJQlVURUQsClJFVklTRUQsIE1PRElGSUVELCBUUkFOU0xBVEVELCBBQlJJREdFRCwgQ09OREVOU0VELCBFWFBBTkRFRCwgQ09MTEVDVEVELApDT01QSUxFRCwgTElOS0VELCBSRUNBU1QsIFRSQU5TRk9STUVEIE9SIEFEQVBURUQgV0lUSE9VVCBUSEUgUFJJT1IgV1JJVFRFTgpDT05TRU5UIE9GIE5PVkVMTCwgSU5DLiBBTlkgVVNFIE9SIEVYUExPSVRBVElPTiBPRiBUSElTIFdPUksgV0lUSE9VVApBVVRIT1JJWkFUSU9OIENPVUxEIFNVQkpFQ1QgVEhFIFBFUlBFVFJBVE9SIFRPIENSSU1JTkFMIEFORCBDSVZJTCAKTElBQklMSVRZLgoKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tPgo=]]></ds-value>
                            </ds-attribute>
                            <ds-attribute ds-attr-name="srvprvProcessXML">
                                <ds-value><![CDATA[PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHByb2Nlc3MgZGVmYXVsdC1jb21wbGV0ZWQtYXBwcm92YWwtc3RhdHVzPSJhcHByb3ZlZCIKICAgIGlkPSJjbj1JQXRvb2xzLXRlc3QsY249UmVxdWVzdERlZnMsY249QXBwQ29uZmlnLENOPXJicG0sQ049ZHJpdmVyc2V0MSxvPXN5c3RlbSIKICAgIHNldG5vdGlmeT0iZmFsc2UiIHZlcnNpb249IjQuNS4wIgogICAgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIKICAgICAgICB4c2k6bm9OYW1lc3BhY2VTY2hlbWFMb2NhdGlvbj0iQXBwcm92YWxQcm9jZXNzNF81XzAueHNkIj48ZGlzcGxheS1uYW1lCiAgICAgICAgeG1sOmxhbmc9ImVuIj5JQXRvb2xzLXRlc3Q8L2Rpc3BsYXktbmFtZT48c3RhcnQtYWN0aXZpdHkKICAgICAgICAgICAgYWN0aXZpdHktaWQ9IlN0YXJ0Ij48ZGlzcGxheS1uYW1lCiAgICAgICAgICAgIHhtbDpsYW5nPSJlbiI+U3RhcnQ8L2Rpc3BsYXktbmFtZT48ZGlzcGxheS1uYW1lCiAgICAgICAgeG1sOmxhbmc9ImVuIj5TdGFydDwvZGlzcGxheS1uYW1lPjwvc3RhcnQtYWN0aXZpdHk+PGxvZy1hY3Rpdml0eQogICAgICAgICAgICBhY3Rpdml0eS1pZD0iQWN0aXZpdHkiPjxkaXNwbGF5LW5hbWUKICAgICAgICB4bWw6bGFuZz0iZW4iPkxvZzwvZGlzcGxheS1uYW1lPjxhdXRob3I+J2RlYnVnJzwvYXV0aG9yPjxtZXNzYWdlPiJKU09OIHN0cmluZyBmcm9tIGZvcm0gc2VsZWN0aW9uczogIiArIGZsb3dkYXRhLmdldCgnU3RhcnQvcmVxZm9ybS9zZWxlY3Rpb25zJyk7PC9tZXNzYWdlPjxjb21tZW50PmZsb3dkYXRhLmdldCgnU3RhcnQvcmVxZm9ybS9zZWxlY3Rpb25zJyk7PC9jb21tZW50PjwvbG9nLWFjdGl2aXR5PjxmaW5pc2gtYWN0aXZpdHkKICAgICAgICAgICAgYWN0aXZpdHktaWQ9IkZpbmlzaCI+PGRpc3BsYXktbmFtZQogICAgICAgICAgICB4bWw6bGFuZz0iZW4iPkZpbmlzaDwvZGlzcGxheS1uYW1lPjxkaXNwbGF5LW5hbWUKICAgICAgICAgICAgeG1sOmxhbmc9ImVuIj5GaW5pc2g8L2Rpc3BsYXktbmFtZT48bm90aWZ5CiAgICAgICAgdGVtcGxhdGU9ImNuPVByb3Zpc2lvbmluZyBBcHByb3ZhbCBDb21wbGV0ZWQgTm90aWZpY2F0aW9uLGNuPURlZmF1bHQgTm90aWZpY2F0aW9uIENvbGxlY3Rpb24sY249c2VjdXJpdHkiLz48L2ZpbmlzaC1hY3Rpdml0eT48bGluawogICAgICAgIHNvdXJjZT0iU3RhcnQiIHRhcmdldD0iQWN0aXZpdHkiIHR5cGU9ImZvcndhcmQiLz48bGluawogICAgICAgIHNvdXJjZT0iQWN0aXZpdHkiIHRhcmdldD0iRmluaXNoIiB0eXBlPSJmb3J3YXJkIi8+PC9wcm9jZXNzPgo8IS0tPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CgpDb3B5cmlnaHQgKGMpIDIwMDYgTm92ZWxsLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuCgpUSElTIFdPUksgSVMgU1VCSkVDVCBUTyBVLlMuIEFORCBJTlRFUk5BVElPTkFMIENPUFlSSUdIVCBMQVdTIEFORCBUUkVBVElFUwpOTyBQQVJUIE9GIFRISVMgV09SSyBNQVkgQkUgVVNFRCwgUFJBQ1RJQ0VELCBQRVJGT1JNRUQgQ09QSUVELCBESVNUUklCVVRFRCwKUkVWSVNFRCwgTU9ESUZJRUQsIFRSQU5TTEFURUQsIEFCUklER0VELCBDT05ERU5TRUQsIEVYUEFOREVELCBDT0xMRUNURUQsCkNPTVBJTEVELCBMSU5LRUQsIFJFQ0FTVCwgVFJBTlNGT1JNRUQgT1IgQURBUFRFRCBXSVRIT1VUIFRIRSBQUklPUiBXUklUVEVOCkNPTlNFTlQgT0YgTk9WRUxMLCBJTkMuIEFOWSBVU0UgT1IgRVhQTE9JVEFUSU9OIE9GIFRISVMgV09SSyBXSVRIT1VUCkFVVEhPUklaQVRJT04gQ09VTEQgU1VCSkVDVCBUSEUgUEVSUEVUUkFUT1IgVE8gQ1JJTUlOQUwgQU5EIENJVklMIApMSUFCSUxJVFkuCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0+Cg==]]></ds-value>
                            </ds-attribute>
                        </ds-attributes>
                    </ds-object>
                </ds-object>
                <ds-object ds-object-class="srvprvTeamDefs" ds-object-name="TeamDefs">
                    <ds-attributes/>
                </ds-object>
                <ds-object ds-object-class="nrfConfig" ds-object-name="RoleConfig">
                    <ds-attributes/>
                    <ds-object ds-object-class="nrfAttestations" ds-object-name="Attestations">
                        <ds-attributes/>
                    </ds-object>
                    <ds-object ds-object-class="nrfReportDefs" ds-object-name="ReportDefs">
                        <ds-attributes/>
                    </ds-object>
                    <ds-object ds-object-class="nrfResourceDefs" ds-object-name="ResourceDefs">
                        <ds-attributes/>
                    </ds-object>
                    <ds-object ds-object-class="nrfRoleDefs" ds-object-name="RoleDefs">
                        <ds-attributes/>
                        <ds-object ds-object-class="nrfRoleDefs" ds-object-name="Level10">
                            <ds-attributes/>
                        </ds-object>
                        <ds-object ds-object-class="nrfRoleDefs" ds-object-name="Level20">
                            <ds-attributes/>
                            <ds-object ds-object-class="nrfRoleDefs" ds-object-name="System">
                                <ds-attributes/>
                            </ds-object>
                        </ds-object>
                        <ds-object ds-object-class="nrfRoleDefs" ds-object-name="Level30">
                            <ds-attributes/>
                        </ds-object>
                    </ds-object>
                    <ds-object ds-object-class="nrfResourceAssociations" ds-object-name="ResourceAssociations">
                        <ds-attributes/>
                    </ds-object>
                    <ds-object ds-object-class="nrfResourceRequests" ds-object-name="ResourceRequests">
                        <ds-attributes/>
                    </ds-object>
                    <ds-object ds-object-class="nrfSODDefs" ds-object-name="SoDDefs">
                        <ds-attributes/>
                    </ds-object>
                </ds-object>
            </ds-object>
        </provisioning>
    </children></driver-configuration>